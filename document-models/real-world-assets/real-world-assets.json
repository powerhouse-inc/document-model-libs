{
    "id": "makerdao/rwa-portfolio",
    "name": "RealWorldAssets",
    "extension": "",
    "description": "",
    "author": {
        "name": "",
        "website": ""
    },
    "specifications": [
        {
            "version": 1,
            "changeLog": [],
            "state": {
                "global": {
                    "schema": "type RealWorldAssetsState { accounts: [Account!]! principalLenderAccountId: ID! # Account.id (That relates to the Maker account) spvs: [Spv!]! feeTypes: [ServiceProvider!]! fixedIncomeTypes: [FixedIncomeType!]! portfolio: [Asset!]! transactions: [GroupTransaction!]! } union Asset = FixedIncome | Cash type FixedIncome { id: ID! fixedIncomeTypeId: ID! # FixedIncomeType.id name: String! spvId: ID! # Spv.id maturity: DateTime! purchaseDate: DateTime! # Weighted average of underlying transactions notional: Float! # Face value sum of the underlying transactions purchasePrice: Float! # purchaseProceeds / notional purchaseProceeds: Float! # Total cash outflow spent on purchases totalDiscount: Float! # notional - purchaseProceeds annualizedYield: Float! # (Purchase Price / ( Notional - Purchase Price)) x (365 / Days to Maturity ) * 100 realizedSurplus: Float! # Sum(Asset Proceeds) + Purchase Proceeds ISIN: String CUSIP: String coupon: Float } type Cash { id: ID! spvId: ID! # Spv.id currency: String! # Will always be 'USD' for version 1 balance: Float! # Sum of all underlying transactions } type FixedIncomeType { id: ID! name: String! } type Spv { id: ID! name: String! } type BaseTransaction { id: ID! assetId: ID! # Asset.id amount: Float! entryTime: DateTime! tradeTime: DateTime settlementTime: DateTime txRef: String accountId: ID # Account.id counterPartyAccountId: ID # Account.id } type Account { id: ID! reference: String! # e.g. bank account number or ETH address label: String } type GroupTransaction { id: ID! type: GroupTransactionType! entryTime: DateTime! cashBalanceChange: Float! cashTransaction: BaseTransaction fixedIncomeTransaction: BaseTransaction feeTransactions: [BaseTransaction] interestTransaction: BaseTransaction } enum CashGroupTransactionType { PrincipalDraw PrincipalReturn } enum FixedIncomeGroupTransactionType { AssetPurchase AssetSale InterestDraw # Payment from Borrower to Arranger (If there is a coupon) InterestReturn # Payment from Arranger to Maker FeesPayment } union GroupTransactionType = | CashGroupTransactionType | FixedIncomeGroupTransactionType type ServiceProvider { id: ID! name: String! feeType: String! accountId: ID! # Account.id } type TransactionFee { serviceProviderId: ID! amount: Float! } scalar DateTime # general input CreateSpvInput { id: ID! name: String! } input EditSpvInput { id: ID! name: String } input DeleteSpvInput { id: ID! } input CreateServiceProviderInput { id: ID! name: String! feeType: String! accountId: ID! } input EditServiceProviderInput { id: ID! name: String feeType: String accountId: ID } input DeleteServiceProviderInput { id: ID! } # portfolio input CreateFixedIncomeTypeInput { id: ID! name: String! } input EditFixedIncomeTypeInput { id: ID! name: String } input CreateFixedIncomeAssetInput { id: ID! fixedIncomeTypeId: ID! # RwaFixedIncomeType.id spvId: ID! # Spv.id name: String! maturity: DateTime! ISIN: String CUSIP: String coupon: Float } input CreateCashAssetInput { id: ID! spvId: ID! # Spv.id currency: String! # Will always be 'USD' for version 1 balance: Float! } input EditCashAssetInput { id: ID! spvId: ID # Spv.id currency: String # Will always be 'USD' for version 1 } input EditFixedIncomeAssetInput { id: ID! fixedIncomeTypeId: ID # RwaFixedIncomeType.id spvId: ID # Spv.id name: String ISIN: String CUSIP: String coupon: Float maturity: DateTime } input DeleteFixedIncomeAssetInput { id: ID! } input DeleteCashAssetInput { id: ID! } input CreateAccountInput { id: ID! reference: String! # e.g. bank account number or ETH address label: String } input EditAccountInput { id: ID! reference: String # e.g. bank account number or ETH address label: String } input DeleteAccountInput { id: ID! } # transactions input CreateBaseTransactionInput { id: ID! assetId: ID! # Asset.id amount: Float! entryTime: DateTime! tradeTime: DateTime settlementTime: DateTime txRef: String accountId: ID # Account.id counterPartyAccountId: ID # Account.id } input EditBaseTransactionInput { assetId: ID # Asset.id amount: Float entryTime: DateTime tradeTime: DateTime settlementTime: DateTime txRef: String accountId: ID # Account.id counterPartyAccountId: ID # Account.id } input CreateGroupTransactionInput { id: ID! type: GroupTransactionType! entryTime: DateTime! cashTransaction: CreateBaseTransactionInput fixedIncomeTransaction: CreateBaseTransactionInput feeTransactions: [CreateBaseTransactionInput] interestTransaction: CreateBaseTransactionInput } input EditGroupTransactionInput { id: ID! type: GroupTransactionType entryTime: DateTime cashTransaction: EditBaseTransactionInput fixedIncomeTransaction: EditBaseTransactionInput feeTransactions: [EditBaseTransactionInput] interestTransaction: EditBaseTransactionInput } # when the type is changed, the transactions associated are deleted input EditGroupTransactionTypeInput { id: ID! type: GroupTransactionType! entryTime: DateTime! } # add a fee transaction to a group transaction's list of fee payments input AddFeeTransactionsToGroupTransactionInput { id: ID! feeTransactions: [CreateBaseTransactionInput] } # edit a specific fee transaction in a fees payment group transaction's list of fee payments input EditFeeTransactionInput { feeTransactionId: ID! id: ID! assetId: ID # Asset.id amount: Float entryTime: DateTime tradeTime: DateTime settlementTime: DateTime txRef: String accountId: ID # Account.id counterPartyAccountId: ID # Account.id } # remove a fee transaction from a fees payment group transaction's list of fee payments input RemoveFeeTransactionFromGroupTransactionInput { id: ID! feeTransactionId: ID! } input DeleteGroupTransactionInput { id: ID! } ",
                    "initialValue": "{\"accounts\":[{\"id\":\"maker-principal-account-id\",\"reference\":\"MakerPrincipal\",\"label\":\"Principal\"}],\"principalLenderAccountId\":\"maker-principal-account-id\",\"spvs\":[{\"id\":\"1\",\"name\":\"TACO\"},{\"id\":\"2\",\"name\":\"SPV 2\"},{\"id\":\"3\",\"name\":\"SPV 3\"}],\"feeTypes\":[{\"id\":\"maker-principal-fee-type-id\",\"name\":\"Maker Principal\",\"feeType\":\"Principal\",\"accountId\":\"maker-principal-account-id\"}],\"fixedIncomeTypes\":[{\"id\":\"1\",\"name\":\"T-Bill\"},{\"id\":\"2\",\"name\":\"U-Bill\"},{\"id\":\"3\",\"name\":\"V-Bill\"}],\"portfolio\":[{\"id\":\"maker-principal-asset-id\",\"spvId\":\"1\",\"currency\":\"USD\",\"balance\":500000},{\"id\":\"137418\",\"fixedIncomeTypeId\":\"1\",\"name\":\"Fixed Income 1\",\"spvId\":\"2\",\"maturity\":\"2024-06-01T00:00:00.000Z\",\"purchaseDate\":\"2021-03-28T00:00:00.000Z\",\"notional\":0,\"purchasePrice\":0,\"purchaseProceeds\":0,\"totalDiscount\":0,\"ISIN\":\"771296973666\",\"CUSIP\":\"225848609\",\"coupon\":0,\"annualizedYield\":0,\"realizedSurplus\":0},{\"id\":\"683189\",\"fixedIncomeTypeId\":\"1\",\"name\":\"FixedIncome 6345\",\"spvId\":\"2\",\"maturity\":\"2024-06-15T00:00:00.000Z\",\"purchaseDate\":\"2021-03-18T00:00:00.000Z\",\"notional\":66561.5,\"purchasePrice\":96.61,\"purchaseProceeds\":64305.07,\"totalDiscount\":2256.43,\"ISIN\":\"807597117063\",\"CUSIP\":\"303442336\",\"coupon\":3.41,\"annualizedYield\":98073.04,\"realizedSurplus\":123456},{\"id\":\"752165\",\"fixedIncomeTypeId\":\"1\",\"name\":\"FixedIncome 1369\",\"spvId\":\"2\",\"maturity\":\"2022-04-24T00:00:00.000Z\",\"purchaseDate\":\"2022-01-03T00:00:00.000Z\",\"notional\":63575.76,\"purchasePrice\":84.07,\"purchaseProceeds\":53448.14,\"totalDiscount\":10127.62,\"ISIN\":\"466394625668\",\"CUSIP\":\"319580691\",\"coupon\":3.35,\"annualizedYield\":18994.69,\"realizedSurplus\":98765}],\"transactions\":[]}",
                    "examples": []
                },
                "local": {
                    "schema": "",
                    "initialValue": "",
                    "examples": []
                }
            },
            "modules": [
                {
                    "id": "Yl/ZEXfD4sPUOGFuwNkNSnw8jaI=",
                    "name": "general",
                    "description": "",
                    "operations": [
                        {
                            "id": "OSkSsemxe9jYh+/AGXsxUdEFnM4=",
                            "name": "CREATE_SPV",
                            "description": "",
                            "schema": "input CreateSpvInput {\n    \tid: ID!\n  name: String!\n}\n",
                            "template": "",
                            "reducer": "",
                            "errors": [],
                            "examples": [],
                            "scope": "global"
                        },
                        {
                            "id": "DRF21J8LbR0FVeq5DvX+CnQaFZo=",
                            "name": "EDIT_SPV",
                            "description": "",
                            "schema": "input EditSpvInput {\n    id: ID!\n    name: String\n}\n",
                            "template": "",
                            "reducer": "",
                            "errors": [],
                            "examples": [],
                            "scope": "global"
                        },
                        {
                            "id": "lKR/ln4O+KeVAht2JyK9KGszlsQ=",
                            "name": "DELETE_SPV",
                            "description": "",
                            "schema": "input DeleteSpvInput {\n    id: ID!\n}\n",
                            "template": "",
                            "reducer": "",
                            "errors": [],
                            "examples": [],
                            "scope": "global"
                        },
                        {
                            "id": "Q9FxdKfya8ND+MFhh3p7dzhW6/4=",
                            "name": "CREATE_SERVICE_PROVIDER",
                            "description": "",
                            "schema": "input CreateServiceProviderInput {\n    \tid: ID!\n\tname: String!\n\tfeeType: String!\n\taccountId: ID!\n}\n",
                            "template": "",
                            "reducer": "",
                            "errors": [],
                            "examples": [],
                            "scope": "global"
                        },
                        {
                            "id": "D2Zkwm89QJ8yeF1LOaNdlnh6mgk=",
                            "name": "EDIT_SERVICE_PROVIDER",
                            "description": "",
                            "schema": "input EditServiceProviderInput {\n   \tid: ID!\n\tname: String\n\tfeeType: String\n\taccountId:ID\n}\n",
                            "template": "",
                            "reducer": "",
                            "errors": [],
                            "examples": [],
                            "scope": "global"
                        },
                        {
                            "id": "VNIpnLnET2frJhUbA+rlP9W2Zgw=",
                            "name": "DELETE_SERVICE_PROVIDER",
                            "description": "",
                            "schema": "input DeleteServiceProviderInput {\n    id: ID!\n}\n",
                            "template": "",
                            "reducer": "",
                            "errors": [],
                            "examples": [],
                            "scope": "global"
                        },
                        {
                            "id": "YxZkL4RYFLjMp15BLCewmXiung4=",
                            "name": "CREATE_ACCOUNT",
                            "description": "",
                            "schema": "input CreateAccountInput {\n    \tid: ID!\n\treference: String!\n\tlabel: String\n}\n",
                            "template": "",
                            "reducer": "",
                            "errors": [],
                            "examples": [],
                            "scope": "global"
                        },
                        {
                            "id": "SXWANm1SEXlrr9Mt+AUF8ZeJnv8=",
                            "name": "EDIT_ACCOUNT",
                            "description": "",
                            "schema": "input EditAccountInput {\n    \tid: ID!\n\treference: String\n\tlabel: String\n}\n",
                            "template": "",
                            "reducer": "",
                            "errors": [],
                            "examples": [],
                            "scope": "global"
                        },
                        {
                            "id": "/bI2dshTNE+VO8yURiuofMaBSnk=",
                            "name": "DELETE_ACCOUNT",
                            "description": "",
                            "schema": "input DeleteAccountInput {\n    \tid: ID!\n}\n",
                            "template": "",
                            "reducer": "",
                            "errors": [],
                            "examples": [],
                            "scope": "global"
                        }
                    ]
                },
                {
                    "id": "S6LkZyJzDgDLyvsPY3dg5omH4Kc=",
                    "name": "portfolio",
                    "description": "",
                    "operations": [
                        {
                            "id": "5HsCtlGGDGgoNqDtvcVycSuJ7nQ=",
                            "name": "CREATE_FIXED_INCOME_TYPE",
                            "description": "",
                            "schema": "input CreateFixedIncomeTypeInput {\n    id: ID!\n    name: String!\n}",
                            "template": "",
                            "reducer": "",
                            "errors": [],
                            "examples": [],
                            "scope": "global"
                        },
                        {
                            "id": "nKGLGOHqaxtn382PRYgMni6JKyo=",
                            "name": "EDIT_FIXED_INCOME_TYPE",
                            "description": "",
                            "schema": "input EditFixedIncomeTypeInput {\n    id: ID!\n    name: String\n}",
                            "template": "",
                            "reducer": "",
                            "errors": [],
                            "examples": [],
                            "scope": "global"
                        },
                        {
                            "id": "nKGLGOHqaxtn382PRYgMni6JKyo=",
                            "name": "CREATE_FIXED_INCOME_ASSET",
                            "description": "",
                            "schema": "input EditFixedIncomeAssetInput {\n    id: ID!\n    fixedIncomeTypeId: ID # RwaFixedIncomeType.id\n    spvId: ID # Spv.id\n    name: String\n    ISIN: String\n    CUSIP: String\n    coupon: Float\n    maturity: DateTime\n}",
                            "template": "",
                            "reducer": "",
                            "errors": [],
                            "examples": [],
                            "scope": "global"
                        },
                        {
                            "id": "SsPBD1U5nYqTCRFu4g0+grvif8o=",
                            "name": "CREATE_CASH_ASSET",
                            "description": "",
                            "schema": "input CreateCashAssetInput {\n\t\tid: ID!\nspvId: ID! # Spv.id\n  currency: String! # Will always be \"USD\" for version 1\n balance: Float!}\n",
                            "template": "",
                            "reducer": "",
                            "errors": [],
                            "examples": [],
                            "scope": "global"
                        },
                        {
                            "id": "I2Cu0ePD1yWfsRBCKOVte4mI8JU=",
                            "name": "EDIT_FIXED_INCOME_ASSET",
                            "description": "",
                            "schema": "input EditFixedIncomeAssetInput {\n    id: ID!\n    fixedIncomeTypeId: ID # RwaFixedIncomeType.id\n    spvId: ID # Spv.id\n    name: String\n    ISIN: String\n    CUSIP: String\n    coupon: Float\n    maturity: DateTime\n    purchaseDate: DateTime # Weighted average of underlying transactions\n    notional: Float # Face value sum of the underlying transactions\n    purchasePrice: Float # purchaseProceeds / notional\n    purchaseProceeds: Float # Total cash outflow spent on purchases\n    totalDiscount: Float # notional - purchaseProceeds\n    marketValue: Float #\n    annualizedYield: Float # (Purchase Price / ( Notional - Purchase Price)) x (365 / Days to Maturity ) * 100\n    realizedSurplus: Float\n    totalSurplus: Float\n    ISIN: String\n    CUSIP: String\n    coupon: Float\n}",
                            "template": "",
                            "reducer": "",
                            "errors": [],
                            "examples": [],
                            "scope": "global"
                        },
                        {
                            "id": "s01BdyXEkcBm32feRrFd0BTQ+aM=",
                            "name": "EDIT_CASH_ASSET",
                            "description": "",
                            "schema": "input EditCashAssetInput {\n\tid: ID!\n\tspv: ID # Spv.id\n  currency: String # Will always be \"USD\" for version 1\n}\n",
                            "template": "",
                            "reducer": "",
                            "errors": [],
                            "examples": [],
                            "scope": "global"
                        },
                        {
                            "id": "WiIOGpzs1TowDkkCvEM/IttAoJ8=",
                            "name": "DELETE_FIXED_INCOME_ASSET",
                            "description": "",
                            "schema": "input DeleteFixedIncomeAssetInput {\n    id: ID!\n}\n",
                            "template": "",
                            "reducer": "",
                            "errors": [],
                            "examples": [],
                            "scope": "global"
                        },
                        {
                            "id": "oOuY9WG2Fb/i+LcI8r20LGEzEJQ=",
                            "name": "DELETE_CASH_ASSET",
                            "description": "",
                            "schema": "input DeleteCashAssetInput {\n    id: ID!\n}\n",
                            "template": "",
                            "reducer": "",
                            "errors": [],
                            "examples": [],
                            "scope": "global"
                        }
                    ]
                },
                {
                    "id": "aZsq8U7Vp3YLkmISdadGmXTVVNs=",
                    "name": "transactions",
                    "description": "",
                    "operations": [
                        {
                            "id": "T3gWYNoqdT/tPrczgdpaCcQz5BI=",
                            "name": "CREATE_GROUP_TRANSACTION",
                            "description": "",
                            "schema": "input CreateGroupTransactionInput {\n    id: ID!\n    type: GroupTransactionType!\n    entryTime: DateTime!\n    cashTransaction: CreateBaseTransactionInput\n    fixedIncomeTransaction: CreateBaseTransactionInput\n    feeTransactions: [CreateBaseTransactionInput]\n    interestTransaction: CreateBaseTransactionInput\n}",
                            "template": "",
                            "reducer": "",
                            "errors": [],
                            "examples": [],
                            "scope": "global"
                        },
                        {
                            "id": "Wg49korUNLaDgD8nhiOYd88S+6g=",
                            "name": "EDIT_GROUP_TRANSACTION",
                            "description": "",
                            "schema": "input CreateGroupTransactionInput {\n    id: ID!\n    type: GroupTransactionType\n    entryTime: DateTime\n    cashTransaction: CreateBaseTransactionInput\n    fixedIncomeTransaction: CreateBaseTransactionInput\n    feeTransactions: [CreateBaseTransactionInput]\n    interestTransaction: CreateBaseTransactionInput\n}",
                            "template": "",
                            "reducer": "",
                            "errors": [],
                            "examples": [],
                            "scope": "global"
                        },
                        {
                            "id": "HOxXt7bh8ZMgXCCrHBe5Vafansg=",
                            "name": "EDIT_GROUP_TRANSACTION_TYPE",
                            "description": "",
                            "schema": "inputEditGroupTransactionTypeInput{id:ID!type:GroupTransactionType!}",
                            "template": "",
                            "reducer": "",
                            "errors": [],
                            "examples": [],
                            "scope": "global"
                        },
                        {
                            "id": "bR8EulBSPuKO8tkYHKoEwfkSgeA=",
                            "name": "ADD_FEE_TRANSACTIONS_TO_GROUP_TRANSACTION",
                            "description": "",
                            "schema": "inputAddFeeTransactionsToGroupTransactionInput{id:ID!feeTransactions:[BaseTransaction]}",
                            "template": "",
                            "reducer": "",
                            "errors": [],
                            "examples": [],
                            "scope": "global"
                        },
                        {
                            "id": "cSwLKUXYJg0OAlLXWxYGfZD6Fts=",
                            "name": "EDIT_FEE_TRANSACTION",
                            "description": "",
                            "schema": "\ninput EditFeeTransactionInput {\n    feeTransactionId: ID!\n    id: ID!\n    assetId: ID! # Asset.id\n    amount: Float!\n    entryTime: DateTime!\n    tradeTime: DateTime\n    settlementTime: DateTime\n    txRef: String\n    accountId: ID # Account.id\n    counterPartyAccountId: ID # Account.id\n}\n",
                            "template": "",
                            "reducer": "",
                            "errors": [],
                            "examples": [],
                            "scope": "global"
                        },
                        {
                            "id": "NINQNICB1l4z33WB2ONypP63OQE=",
                            "name": "REMOVE_FEE_TRANSACTION_FROM_GROUP_TRANSACTION",
                            "description": "",
                            "schema": "input RemoveFeeTransactionFromGroupTransactionInput{id:ID!feeTransactionId:ID!}",
                            "template": "",
                            "reducer": "",
                            "errors": [],
                            "examples": [],
                            "scope": "global"
                        },
                        {
                            "id": "sVzG0QHIjUwD4IffaZ+47riwIVM=",
                            "name": "DELETE_GROUP_TRANSACTION",
                            "description": "",
                            "schema": "input DeleteGroupTransactionInput {\n    id: ID!\n}\n",
                            "template": "",
                            "reducer": "",
                            "errors": [],
                            "examples": [],
                            "scope": "global"
                        }
                    ]
                }
            ]
        }
    ]
}
