type FolderNode {
    id: String!
    name: String!
    kind: String!
    parentFolder: String
}

type FileNode {
    id: String!
    name: String!
    kind: String!
    documentType: String!
    parentFolder: String
}

union Node = FolderNode | FileNode

type DocumentDriveState {
    id: ID!
    name: String!
    nodes: [Node!]!
    icon: String
    remoteUrl: String
}

# Node

input AddFileInput {
    id: ID!
    name: String!
    documentType: String!
    parentFolder: ID
}

input AddFolderInput {
    id: ID!
    name: String!
    parentFolder: ID
}

input DeleteNodeInput {
    id: ID!
}

input UpdateFileInput {
    id: ID!
    parentFolder: ID
    name: String
    documentType: String
}

input UpdateNodeInput {
    id: ID!
    parentFolder: ID
    name: String
}

input CopyNodeInput {
    srcId: ID!
    targetId: ID!
    targetName: String
    targetParentFolder: ID
}

input MoveNodeInput {
    srcFolder: ID!
    targetParentFolder: ID
}

# Drive

input SetDriveNameInput {
    name: String!
}

input SetSharingTypeInput {
    type: String!
}
